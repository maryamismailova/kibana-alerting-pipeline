logstashPipeline:
  logstash.conf: |
    input {
      elasticsearch {
        hosts => "${ELASTICSEARCH_HOSTS}"
        #ssl => true
        #ca_file => "/usr/share/certs/elasticsearch-ca.pem"
        #user => "${ELASTICSEARCH_USERNAME}"
        #password => "${ELASTICSEARCH_PASSWORD}"
        index => "${ELASTICSEARCH_INPUT_INDEX}"
        query => '{"query":{"bool":{"must_not":[{"exists":{"field":"is_read"}}],"must":[{"range":{"@timestamp":{"gte":"now-1h"}}}]}}}'
        schedule => "* * * * *"
        size => 500
        scroll => "1m"
        docinfo => true
        docinfo_target => "[@metadata][doc]"
      }
    }
    filter {
      json {
        source => "message"
      }
      mutate {
        replace => {"is_read"=> "true"}
      }
    }
    output {
      stdout {}
      http {
        url => "${MICROSOFT_TEAMS_WEBHOOK}"
        #proxy => "${HTTP_PROXY}"
        http_method => "post"
        automatic_retries => 5
        retry_failed => false
        content_type => "json"
        format => "message"
        message => '{"@type":"MessageCard","@context":"http://schema.org/extensions","themeColor":"0076D7","summary":"%{summary}","sections":[{"activityTitle":"%{alert_status}: %{summary} in %{alert_id}","activitySubtitle":"%{alert_id}","activityImage":"https://brandslogos.com/wp-content/uploads/images/large/elastic-kibana-logo.png","facts":[{"name":"Alert conditions","value":"%{context_conditions}"},{"name":"Alerted value","value":"%{context_matching}"},{"name":"Date (UTC)","value":"%{@timestamp}"},{"name":"Status","value":"%{alert_status}"}],"markdown":true}]}'
      }
      elasticsearch {
        hosts => "${ELASTICSEARCH_HOSTS}"
        #ssl => true
        #cacert => "/usr/share/certs/elasticsearch-ca.pem"
        #user => "${ELASTICSEARCH_USERNAME}"
        #password => "${ELASTICSEARCH_PASSWORD}"
     
        retry_on_conflict => 5
        index => "${ELASTICSEARCH_INPUT_INDEX}"
        document_type => "%{[@metadata][doc][_type]}"
        document_id => "%{[@metadata][doc][_id]}"
        action => "update"
        
      }
    }
